<!DOCTYPE html>
<html>
    <head>
        <title><%= title %></title>
        <link rel='stylesheet' href='/stylesheets/style.css'/>
    </head>
    <body>
        <section id="classes">
            <h1>Add Classes</h1>
            <label for="classes">Insert classes to add, separated by a comma (,):</label>
            <input name="classes" type="text"/>
            <button type="button" id="add-class">Add Class(es)</button>

            <h3>Classes on Element</h3>
            <ul id="result" class="test something"><!--add list of classes here--></ul>

            <script>
                (function() {
                    var resultList = document.getElementById("result");

                    var getClasses = function() {
                        var existingClasses = resultList.className.split(' '); // get existing classes

                        resultList.innerHTML = ''; // reset list
                        // update <ul> with class list
                        for (var a = 0; a < existingClasses.length; a++) {
                            resultList.innerHTML += '<li>' + existingClasses[a] + '</li>';
                        }
                    }

                    getClasses(); //initialize

                    // button click handler
                    document.getElementById("add-class").onclick = function(){
                        var classes = document.getElementsByName("classes")[0].value; //gets first input that matches
                        classes = classes.split(',');

                        // add additional classes
                        for (var i = 0; i < classes.length; i++) {
                            if (resultList.className.split(' ').indexOf(classes[i]) > -1) {
                                // class already exists on this element, don't add
                            } else {
                                resultList.className += ' ' + classes[i]; // add to class list
                            }
                        }
                        getClasses(); // update existing class list in <ul>
                    }
                })();
            </script>
        </section>

        <section id="palindrome">
            <h1>Palindrome</h1>
            <input name="palindrome" type="text">
            <button type="button" id="test-palindrome">Test Palindrome</button>

            <p>Result: <span id="palindrome-result"><!--append result here--></span></p>

            <script>
                var isPalindrome = function(str) {
                    for (var i = 0, j = str.length-1; i <= j; i++, j--) {
//                        console.log(str[i], " " ,str[j]);
                        if (str[i] != str[j]) {
                            return false;
                        }
                    }
                    return true;
                }

                var palindromeBtn = document.getElementById("test-palindrome");
                var resultP = document.getElementById("palindrome-result");

                // button click handler
                palindromeBtn.onclick = function() {
                    var testStr = document.getElementsByName("palindrome")[0].value;
                    var testStrAsArr = testStr.split(""); // since string as array is unsafe
//                    console.log(testStr);

                    var result = isPalindrome(testStrAsArr);
                    resultP.innerHTML = result;
                }
            </script>
        </section>

        <section id="reverse-string">
            <h1>Reverse Strings</h1>
            <input id="reverse-string-input" name="reverse" type="text">
            <button type="button" id="test-reverse-string">Reverse String</button>

            <p>Result: <span id="reverse-string-result"><!--append result here--></span></p>

            <script>
                var reverseBtn = document.getElementById("test-reverse-string");
                var strResult = document.getElementById("reverse-string-result");

                reverseBtn.onclick = function() {
                    // accessing string as array is unsafe
                    var inputStr = document.getElementById("reverse-string-input").value;
                    var inputStrAsArr = inputStr.split("");
//                    console.log(inputStr);

                    var newStr = '';
                    for (var j = inputStrAsArr.length-1; j >= 0; j--) {
                        newStr += inputStrAsArr[j];
                    }

//                    console.log(newStr);

                    strResult.innerHTML = newStr;
                }

            </script>
        </section>

        <section id="pair-numbers">
            <h1>Pairing Numbers to Sum</h1>
            <label for="pair-numbers-input">List whole numbers separated by a comma</label>
            <input id="pair-numbers-input" name="pair-numbers-input" type="text">

            <br>

            <label for="pair-numbers-sum">Sum to Search for</label>
            <input id="pair-numbers-sum" name="pair=numbers-sum" type="number">

            <br>
            <button type="button" id="pair-numbers" onclick="findSum()">Check for Pairs</button>

            <p>Result:
                <ul id="sum-result"><!--append result list here--></ul>
            </p>

            <script>
                function findSum() {
                    var numberList = document.getElementById("pair-numbers-input").value.split(",");
                    var sum = parseInt(document.getElementById("pair-numbers-sum").value, 10);

                    // apply parseInt
                    numberList = numberList.map(function(item){
                        return parseInt(item, 10); //base 10
                    });

                    // sort based on integer value, ascending
                    numberList.sort(function(a,b){
                        return a - b; // to ensure they are both numeric
                    });

//                    console.log(numberList);

                    var resultList = [];

                    // approach #1
                    var frontIdx = 0;
                    var secondIdx = frontIdx + 1;

//                    while (frontIdx < numberList.length && secondIdx < numberList.length) {
//                        var tempSum = numberList[frontIdx] + numberList[secondIdx];
////                        console.log(numberList[frontIdx], "+", numberList[secondIdx], "=", tempSum);
//
//                        if (tempSum === sum) {
//                            var pair = numberList[frontIdx] + ', ' + numberList[secondIdx];
//                            if (resultList.indexOf(pair) < 0) {
//                                resultList.push(pair);
//                            } // otherwise, don't push repeat pair
//                            frontIdx++;
//                            secondIdx = frontIdx + 1;
//                        } else if (tempSum < sum) {
//                            secondIdx++;
//                        } else { // tempSum > sum
//                            frontIdx++;
//                            secondIdx = frontIdx + 1;
//                        }
//                    }

                    // approach #2
                    var numberMap = {};
                    for (var i = 0; i < numberList.length; i++) {
                        if (numberList[i] in numberMap) {
                            numberMap[numberList[i]]++;
                        } else {
                            numberMap[numberList[i]] = 1;
                        }
                    }

                    for (var j = 0; j < numberList.length; j++) {
                        var complement = sum - numberList[j];
                        //console.log(complement);
                        if (complement in numberMap) {
                            var pair = [numberList[j], complement].sort(function(a,b){
                                return a - b; // to ensure they are both numeric
                            });

                            var pairStr = pair[0] + ', ' + pair[1];
                            if (resultList.indexOf(pairStr) < 0 ) {
                                resultList.push(pairStr);
                            }
                        }
                    }

//                    console.log(numberMap);
//                    console.log(resultList);
//
                    var result = document.getElementById("sum-result");
                    result.innerHTML = ''; //reset result list
                    if (resultList.length > 0) { // there are pairs that sum to the value
                        for (var i = 0; i < resultList.length; i++) {
                            result.innerHTML += '<li>' + resultList[i] + '</li>';
                        }
                    } else {
                        result.innerHTML += 'No pairs sum to ' + sum;
                    }
                }
            </script>
        </section>

        <section id="fizzbuzz">
            <h1>Fizzbuzz</h1>
            <button type="button" onclick="runCode()">Run Me</button>

            <script>
                function runCode() {
                    var final = 100;
                    for (var i = 1; i <= final; i++){
                        var toOutput = "";

                        if (i % 3 === 0) {
                            toOutput += "fizz";
                        }

                        if (i % 5 === 0) {
                            toOutput += "buzz";
                        }


                        if (toOutput.length){
                            console.log(i);
                            console.log(toOutput);
                        }
                    }
                }
            </script>
        </section>

        <section id="find-element">
            <h1>Find Element</h1>

            <ul id="list1">
                <li>1</li>
                <li>2</li>
                <li>3</li>
                <li>4</li>
            </ul>

            <ul id="list2">
                <li>
                    <p class="test">Hello World
                        <a href="#" id="test-link">Some Link</a>
                    </p>
                </li>
                <li>
                    <p class="test2">Blah
                    </p>
                </li>
                <li>3</li>
                <li>4</li>
            </ul>

            <button id="test-descendant" type="button" onclick="runDescendant()">Test Descendant</button>
            <button id="test-parent" type="button" onclick="runDescendant2()">Test Descendant 2</button>

            <script>
                var testEl = document.getElementById("test-link");
                var testPar = document.getElementById("list2");
                var testPar2 = document.getElementById("list1");

                var runDescendant = function() {
                    console.log(isDescendant(testPar, testEl));
                }

                var runDescendant2 = function() {
                    console.log(isDescendant(testPar2, testEl));
                }

                function isDescendant(parent, child) {
                    var node = child.parentNode;
                    while (node != null) {
                        if (node === parent) {
                            return true;
                        }
                        node = node.parentNode;
                    }
                    return false;
                }

            </script>
        </section>

        <section id="hashes">
            <h1>Hashes</h1>
            <button id="go-hashes" type="button" onclick="doHashes()">Run Me</button>

            <script>
                var input = [
                    { skill: 'css', user: 'Bill' },
                    { skill: 'javascript', user: 'Chad' },
                    { skill: 'javascript', user: 'Bill' },
                    { skill: 'css', user: 'Sue' },
                    { skill: 'javascript', user: 'Sue' },
                    { skill: 'html', user: 'Sue' }
                ];

                var temp = {}; // use temp map so that: skill: [user1, user2, user3]
                var final = []; //final is an array of objects

                function doHashes() {
                    for(var i = 0, len = input.length; i < len; i++) {
                        var skill = input[i].skill;
                        var user = input[i].user;

                        if (temp[skill]) {
                            temp[skill].users.push(user);
                            temp[skill].count++;
                        } else {
                            temp[skill] = {skill: skill, users: [user], count: 1};
                            final.push(temp[skill]);
                        }
                    }

                    console.log(final);
                }
            </script>
        </section>

        <section id="fibonnaci">
            <h1>Fibonacci</h1>

            Fibonacci n:
            <input type="number" id="fib-n">
            <button id="do-fib" type="button" onclick="fibCode()">Run Me</button>

            <script>
                function fibCode() {
                    var n = document.getElementById('fib-n').value;
                    var result = doFib(n);

                    console.log(result);
                }

                function doFib(n){
                    if (n < 2) {
                        return 1;
                    }

                    return doFib(n-1) + doFib(n-2);
                }
            </script>
        </section>

        <section id="merge-arrays">
            <h1>Merge Arrays</h1>
            <button type="button" id="merge-array-btn" onclick="doMerging()">Run Me</button>

            <script>
                function doMerging() {
                    var cnt = 0;

                    function mergeArrays(arr1, arr2) {
                        var mergedArr = [];

                        var i = arr1.length, j = arr2.length;
                        var idx1 = 0, idx2 = 0;

                        while (idx1 < i || idx2 < j) {
                            if (idx1 >= i){ // arr1 done
                                mergedArr.push(arr2[idx2]);
                                idx2++;
                            } else if (idx2 >= j) { // arr2 done
                                mergedArr.push(arr1[idx1]);
                                idx1++;
                            } else {
                                if (arr1[idx1] < arr2[idx2]){
                                    mergedArr.push(arr1[idx1]);
                                    idx1++;
                                } else {
                                    mergedArr.push(arr2[idx2]);
                                    idx2++;
                                }
                            }
                            cnt++;

                        }

                        return mergedArr;

                    }

                    var test1 = [1,3,6,8,9];
                    var test2 = [0,2,5,7,12,15];
                    //console.log(mergeArrays(test1, test2));
                    //console.log(cnt);

                    function multiMerge(arrOfArr){
                        var numArr = arrOfArr.length;

                        // initial merge
                        var result = mergeArrays(arrOfArr[0], arrOfArr[1]);
                        console.log(cnt);

                        for (var i = 2; i < numArr; i++){
                            result = mergeArrays(result, arrOfArr[i]);
                            console.log(cnt);
                        }

                        return result;
                    }

                    var test3 = [1,2,3];
                    var test4 = [0,5,6,20];
                    var testArr = [test1, test2, test3, test4];

                    console.log(multiMerge(testArr));
                    console.log(cnt);
                }
            </script>
        </section>
    </body>
</html>
